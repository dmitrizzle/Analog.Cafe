// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render SignInInfo, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    stateSessionInfo={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <styled.ul>
        <li>
                <span
                        className="highlight icon"
                >
                        ❤
                </span>
                 Save your
                 
                <Unknown
                        to="/favourites"
                >
                        favourites
                </Unknown>
                 for later.
        </li>
        <li>
                <span
                        className="icon"
                >
                        ✒︎
                </span>
                 
                <Unknown
                        to="/submit"
                >
                        Submit
                </Unknown>
                 your work, get featured.
        </li>
        <li>
                <span
                        className="highlight icon"
                >
                        ❖
                </span>
                 Free
                 
                <Unknown
                        to="/resources"
                >
                        downloads
                </Unknown>
                 & pre-releases.
        </li>
        <li>
                <span
                        className="icon"
                >
                        ☞
                </span>
                 Weekly email
                 
                <Unknown
                        onClick={[Function]}
                        to="#analogue-reads"
                >
                        newsletter
                </Unknown>
                .
        </li>
</styled.ul>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <li>
            <span
                        className="highlight icon"
            >
                        ❤
            </span>
             Save your
             
            <Unknown
                        to="/favourites"
            >
                        favourites
            </Unknown>
             for later.
</li>,
          <li>
            <span
                        className="icon"
            >
                        ✒︎
            </span>
             
            <Unknown
                        to="/submit"
            >
                        Submit
            </Unknown>
             your work, get featured.
</li>,
          <li>
            <span
                        className="highlight icon"
            >
                        ❖
            </span>
             Free
             
            <Unknown
                        to="/resources"
            >
                        downloads
            </Unknown>
             & pre-releases.
</li>,
          <li>
            <span
                        className="icon"
            >
                        ☞
            </span>
             Weekly email
             
            <Unknown
                        onClick={[Function]}
                        to="#analogue-reads"
            >
                        newsletter
            </Unknown>
            .
</li>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="highlight icon"
>
                ❤
</span>,
              " Save your",
              " ",
              <Unknown
                to="/favourites"
>
                favourites
</Unknown>,
              " for later.",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "❤",
                "className": "highlight icon",
              },
              "ref": null,
              "rendered": "❤",
              "type": "span",
            },
            " Save your",
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "favourites",
                "to": "/favourites",
              },
              "ref": null,
              "rendered": "favourites",
              "type": [Function],
            },
            " for later.",
          ],
          "type": "li",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="icon"
>
                ✒︎
</span>,
              " ",
              <Unknown
                to="/submit"
>
                Submit
</Unknown>,
              " your work, get featured.",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "✒︎",
                "className": "icon",
              },
              "ref": null,
              "rendered": "✒︎",
              "type": "span",
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Submit",
                "to": "/submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": [Function],
            },
            " your work, get featured.",
          ],
          "type": "li",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="highlight icon"
>
                ❖
</span>,
              " Free",
              " ",
              <Unknown
                to="/resources"
>
                downloads
</Unknown>,
              " & pre-releases.",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "❖",
                "className": "highlight icon",
              },
              "ref": null,
              "rendered": "❖",
              "type": "span",
            },
            " Free",
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "downloads",
                "to": "/resources",
              },
              "ref": null,
              "rendered": "downloads",
              "type": [Function],
            },
            " & pre-releases.",
          ],
          "type": "li",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="icon"
>
                ☞
</span>,
              " Weekly email",
              " ",
              <Unknown
                onClick={[Function]}
                to="#analogue-reads"
>
                newsletter
</Unknown>,
              ".",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "☞",
                "className": "icon",
              },
              "ref": null,
              "rendered": "☞",
              "type": "span",
            },
            " Weekly email",
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "newsletter",
                "onClick": [Function],
                "to": "#analogue-reads",
              },
              "ref": null,
              "rendered": "newsletter",
              "type": [Function],
            },
            ".",
          ],
          "type": "li",
        },
      ],
      "type": [Function],
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <styled.ul>
          <li>
                    <span
                              className="highlight icon"
                    >
                              ❤
                    </span>
                     Save your
                     
                    <Unknown
                              to="/favourites"
                    >
                              favourites
                    </Unknown>
                     for later.
          </li>
          <li>
                    <span
                              className="icon"
                    >
                              ✒︎
                    </span>
                     
                    <Unknown
                              to="/submit"
                    >
                              Submit
                    </Unknown>
                     your work, get featured.
          </li>
          <li>
                    <span
                              className="highlight icon"
                    >
                              ❖
                    </span>
                     Free
                     
                    <Unknown
                              to="/resources"
                    >
                              downloads
                    </Unknown>
                     & pre-releases.
          </li>
          <li>
                    <span
                              className="icon"
                    >
                              ☞
                    </span>
                     Weekly email
                     
                    <Unknown
                              onClick={[Function]}
                              to="#analogue-reads"
                    >
                              newsletter
                    </Unknown>
                    .
          </li>
</styled.ul>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <li>
              <span
                            className="highlight icon"
              >
                            ❤
              </span>
               Save your
               
              <Unknown
                            to="/favourites"
              >
                            favourites
              </Unknown>
               for later.
</li>,
            <li>
              <span
                            className="icon"
              >
                            ✒︎
              </span>
               
              <Unknown
                            to="/submit"
              >
                            Submit
              </Unknown>
               your work, get featured.
</li>,
            <li>
              <span
                            className="highlight icon"
              >
                            ❖
              </span>
               Free
               
              <Unknown
                            to="/resources"
              >
                            downloads
              </Unknown>
               & pre-releases.
</li>,
            <li>
              <span
                            className="icon"
              >
                            ☞
              </span>
               Weekly email
               
              <Unknown
                            onClick={[Function]}
                            to="#analogue-reads"
              >
                            newsletter
              </Unknown>
              .
</li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="highlight icon"
>
                  ❤
</span>,
                " Save your",
                " ",
                <Unknown
                  to="/favourites"
>
                  favourites
</Unknown>,
                " for later.",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "❤",
                  "className": "highlight icon",
                },
                "ref": null,
                "rendered": "❤",
                "type": "span",
              },
              " Save your",
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "favourites",
                  "to": "/favourites",
                },
                "ref": null,
                "rendered": "favourites",
                "type": [Function],
              },
              " for later.",
            ],
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="icon"
>
                  ✒︎
</span>,
                " ",
                <Unknown
                  to="/submit"
>
                  Submit
</Unknown>,
                " your work, get featured.",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "✒︎",
                  "className": "icon",
                },
                "ref": null,
                "rendered": "✒︎",
                "type": "span",
              },
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Submit",
                  "to": "/submit",
                },
                "ref": null,
                "rendered": "Submit",
                "type": [Function],
              },
              " your work, get featured.",
            ],
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="highlight icon"
>
                  ❖
</span>,
                " Free",
                " ",
                <Unknown
                  to="/resources"
>
                  downloads
</Unknown>,
                " & pre-releases.",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "❖",
                  "className": "highlight icon",
                },
                "ref": null,
                "rendered": "❖",
                "type": "span",
              },
              " Free",
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "downloads",
                  "to": "/resources",
                },
                "ref": null,
                "rendered": "downloads",
                "type": [Function],
              },
              " & pre-releases.",
            ],
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="icon"
>
                  ☞
</span>,
                " Weekly email",
                " ",
                <Unknown
                  onClick={[Function]}
                  to="#analogue-reads"
>
                  newsletter
</Unknown>,
                ".",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "☞",
                  "className": "icon",
                },
                "ref": null,
                "rendered": "☞",
                "type": "span",
              },
              " Weekly email",
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "newsletter",
                  "onClick": [Function],
                  "to": "#analogue-reads",
                },
                "ref": null,
                "rendered": "newsletter",
                "type": [Function],
              },
              ".",
            ],
            "type": "li",
          },
        ],
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
