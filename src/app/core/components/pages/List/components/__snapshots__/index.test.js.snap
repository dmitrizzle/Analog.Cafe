// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render Bleed, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ThemeProvider
    theme={
        Object {
            "color": Object {
              "background": [Function],
              "brand": [Function],
              "foreground": [Function],
              "highlight": [Function],
            },
            "effects": Object {
              "borderRadius": Object {
                "med": 0.5,
                "small": [Function],
              },
            },
            "elements": Object {
              "thickBorder": [Function],
            },
            "layer": Object {
              "card": 30,
              "nav": 20,
              "overlay": 40,
              "tuck": -1,
              "up": 10,
            },
            "opacity": Object {
              "half": 0.5,
              "least": 0.125,
              "most": 0.85,
            },
            "size": Object {
              "block": Object {
                "border": 8,
                "column": Object {
                  "l": 820,
                  "m": 750,
                },
                "padding": 1.5,
                "spacing": 1,
              },
              "breakpoint": Object {
                "exact": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "max": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "min": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "stops": Object {
                  "max": 1600,
                  "min": 320,
                },
              },
              "font": Object {
                "auto": Array [
                  "
                ",
                  "
        		@media (min-width: ",
                  "32.5625",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "32.5",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "20",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (min-width: ",
                  "100.0625",
                  "em) {
        			",
                  "font-size:	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  ";
              ",
                ],
                "l": 23,
                "m": 20,
                "make": Object {
                  "larger": 3,
                  "normal": 1,
                  "smaller": 0.85,
                  "tiny": 0.65,
                },
                "s": 18,
                "xs": 17,
              },
            },
            "typography": Object {
              "text": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Lora', Georgia, serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                ",
                ],
                "font": "'Lora', Georgia, serif",
                "lineHeight": 1.75,
              },
              "title": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Exo 2', Arial, sans-serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                  font-weight: ",
                  "600",
                  ";
                  margin: 0;
                ",
                ],
                "font": "'Exo 2', Arial, sans-serif",
                "lineHeight": 1.15,
              },
            },
          }
    }
>
    <styled.div />
</ThemeProvider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Render HowToSubmit, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <hr />,
        <Unknown />,
        <styled.div
          style={
                    Object {
                              "paddingBottom": "1.5em",
                            }
          }
>
          <Unknown
                    branded={true}
                    to="/submit/compose"
          >
                    Submit Now
          </Unknown>
</styled.div>,
        <Unknown />,
      ],
      "style": Object {
        "paddingBottom": "17.5em",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Unknown
            branded={true}
            to="/submit/compose"
>
            Submit Now
</Unknown>,
          "style": Object {
            "paddingBottom": "1.5em",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "branded": true,
            "children": "Submit Now",
            "to": "/submit/compose",
          },
          "ref": null,
          "rendered": "Submit Now",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <hr />,
          <Unknown />,
          <styled.div
            style={
                        Object {
                                    "paddingBottom": "1.5em",
                                  }
            }
>
            <Unknown
                        branded={true}
                        to="/submit/compose"
            >
                        Submit Now
            </Unknown>
</styled.div>,
          <Unknown />,
        ],
        "style": Object {
          "paddingBottom": "17.5em",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Unknown
              branded={true}
              to="/submit/compose"
>
              Submit Now
</Unknown>,
            "style": Object {
              "paddingBottom": "1.5em",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "branded": true,
              "children": "Submit Now",
              "to": "/submit/compose",
            },
            "ref": null,
            "rendered": "Submit Now",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Render ListBlock, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    items={
        Array [
            Object {
              "id": 0,
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "author": undefined,
      "children": <styled.ul
        author={undefined}
        status={undefined}
>
        <li>
                <Unknown
                        onClick={[Function]}
                        onMouseOver={undefined}
                        to={undefined}
                >
                        <section>
                                <figure
                                        style={null}
                                >
                                        <div
                                                aria-label="undefined poster image"
                                                style={
                                                        Object {
                                                                "backgroundImage": undefined,
                                                              }
                                                }
                                        />
                                </figure>
                                <div>
                                        <h2
                                                style={
                                                        Object {
                                                                "letterSpacing": undefined,
                                                                "opacity": undefined,
                                                              }
                                                }
                                        />
                                        <h3
                                                style={
                                                        Object {
                                                                "letterSpacing": undefined,
                                                                "paddingLeft": undefined,
                                                              }
                                                }
                                        />
                                        <div>
                                                <withRouter()
                                                        item={
                                                                Object {
                                                                        "id": 0,
                                                                      }
                                                        }
                                                        private={undefined}
                                                />
                                                <Unknown
                                                        isAdmin={undefined}
                                                        item={
                                                                Object {
                                                                        "id": 0,
                                                                      }
                                                        }
                                                        private={undefined}
                                                        readReceipts={undefined}
                                                />
                                        </div>
                                </div>
                        </section>
                        <styled.div
                                index={0}
                                style={
                                        Object {
                                                "backgroundImage": undefined,
                                              }
                                }
                        />
                </Unknown>
        </li>
</styled.ul>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "author": undefined,
        "children": Array [
          <li>
            <Unknown
                        onClick={[Function]}
                        onMouseOver={undefined}
                        to={undefined}
            >
                        <section>
                                    <figure
                                                style={null}
                                    >
                                                <div
                                                            aria-label="undefined poster image"
                                                            style={
                                                                        Object {
                                                                                    "backgroundImage": undefined,
                                                                                  }
                                                            }
                                                />
                                    </figure>
                                    <div>
                                                <h2
                                                            style={
                                                                        Object {
                                                                                    "letterSpacing": undefined,
                                                                                    "opacity": undefined,
                                                                                  }
                                                            }
                                                />
                                                <h3
                                                            style={
                                                                        Object {
                                                                                    "letterSpacing": undefined,
                                                                                    "paddingLeft": undefined,
                                                                                  }
                                                            }
                                                />
                                                <div>
                                                            <withRouter()
                                                                        item={
                                                                                    Object {
                                                                                                "id": 0,
                                                                                              }
                                                                        }
                                                                        private={undefined}
                                                            />
                                                            <Unknown
                                                                        isAdmin={undefined}
                                                                        item={
                                                                                    Object {
                                                                                                "id": 0,
                                                                                              }
                                                                        }
                                                                        private={undefined}
                                                                        readReceipts={undefined}
                                                            />
                                                </div>
                                    </div>
                        </section>
                        <styled.div
                                    index={0}
                                    style={
                                                Object {
                                                            "backgroundImage": undefined,
                                                          }
                                    }
                        />
            </Unknown>
</li>,
        ],
        "status": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": <Unknown
              onClick={[Function]}
              onMouseOver={undefined}
              to={undefined}
>
              <section>
                            <figure
                                          style={null}
                            >
                                          <div
                                                        aria-label="undefined poster image"
                                                        style={
                                                                      Object {
                                                                                    "backgroundImage": undefined,
                                                                                  }
                                                        }
                                          />
                            </figure>
                            <div>
                                          <h2
                                                        style={
                                                                      Object {
                                                                                    "letterSpacing": undefined,
                                                                                    "opacity": undefined,
                                                                                  }
                                                        }
                                          />
                                          <h3
                                                        style={
                                                                      Object {
                                                                                    "letterSpacing": undefined,
                                                                                    "paddingLeft": undefined,
                                                                                  }
                                                        }
                                          />
                                          <div>
                                                        <withRouter()
                                                                      item={
                                                                                    Object {
                                                                                                  "id": 0,
                                                                                                }
                                                                      }
                                                                      private={undefined}
                                                        />
                                                        <Unknown
                                                                      isAdmin={undefined}
                                                                      item={
                                                                                    Object {
                                                                                                  "id": 0,
                                                                                                }
                                                                      }
                                                                      private={undefined}
                                                                      readReceipts={undefined}
                                                        />
                                          </div>
                            </div>
              </section>
              <styled.div
                            index={0}
                            style={
                                          Object {
                                                        "backgroundImage": undefined,
                                                      }
                            }
              />
</Unknown>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <section>
                  <figure
                                    style={null}
                  >
                                    <div
                                                      aria-label="undefined poster image"
                                                      style={
                                                                        Object {
                                                                                          "backgroundImage": undefined,
                                                                                        }
                                                      }
                                    />
                  </figure>
                  <div>
                                    <h2
                                                      style={
                                                                        Object {
                                                                                          "letterSpacing": undefined,
                                                                                          "opacity": undefined,
                                                                                        }
                                                      }
                                    />
                                    <h3
                                                      style={
                                                                        Object {
                                                                                          "letterSpacing": undefined,
                                                                                          "paddingLeft": undefined,
                                                                                        }
                                                      }
                                    />
                                    <div>
                                                      <withRouter()
                                                                        item={
                                                                                          Object {
                                                                                                            "id": 0,
                                                                                                          }
                                                                        }
                                                                        private={undefined}
                                                      />
                                                      <Unknown
                                                                        isAdmin={undefined}
                                                                        item={
                                                                                          Object {
                                                                                                            "id": 0,
                                                                                                          }
                                                                        }
                                                                        private={undefined}
                                                                        readReceipts={undefined}
                                                      />
                                    </div>
                  </div>
</section>,
                <styled.div
                  index={0}
                  style={
                                    Object {
                                                      "backgroundImage": undefined,
                                                    }
                  }
/>,
              ],
              "onClick": [Function],
              "onMouseOver": undefined,
              "to": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <figure
                      style={null}
>
                      <div
                                            aria-label="undefined poster image"
                                            style={
                                                                  Object {
                                                                                        "backgroundImage": undefined,
                                                                                      }
                                            }
                      />
</figure>,
                    <div>
                      <h2
                                            style={
                                                                  Object {
                                                                                        "letterSpacing": undefined,
                                                                                        "opacity": undefined,
                                                                                      }
                                            }
                      />
                      <h3
                                            style={
                                                                  Object {
                                                                                        "letterSpacing": undefined,
                                                                                        "paddingLeft": undefined,
                                                                                      }
                                            }
                      />
                      <div>
                                            <withRouter()
                                                                  item={
                                                                                        Object {
                                                                                                              "id": 0,
                                                                                                            }
                                                                  }
                                                                  private={undefined}
                                            />
                                            <Unknown
                                                                  isAdmin={undefined}
                                                                  item={
                                                                                        Object {
                                                                                                              "id": 0,
                                                                                                            }
                                                                  }
                                                                  private={undefined}
                                                                  readReceipts={undefined}
                                            />
                      </div>
</div>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        aria-label="undefined poster image"
                        style={
                                                Object {
                                                                        "backgroundImage": undefined,
                                                                      }
                        }
/>,
                      "style": null,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "aria-label": "undefined poster image",
                        "style": Object {
                          "backgroundImage": undefined,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "div",
                    },
                    "type": "figure",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <h2
                          style={
                                                    Object {
                                                                              "letterSpacing": undefined,
                                                                              "opacity": undefined,
                                                                            }
                          }
/>,
                        <h3
                          style={
                                                    Object {
                                                                              "letterSpacing": undefined,
                                                                              "paddingLeft": undefined,
                                                                            }
                          }
/>,
                        <div>
                          <withRouter()
                                                    item={
                                                                              Object {
                                                                                                        "id": 0,
                                                                                                      }
                                                    }
                                                    private={undefined}
                          />
                          <Unknown
                                                    isAdmin={undefined}
                                                    item={
                                                                              Object {
                                                                                                        "id": 0,
                                                                                                      }
                                                    }
                                                    private={undefined}
                                                    readReceipts={undefined}
                          />
</div>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "style": Object {
                            "letterSpacing": undefined,
                            "opacity": undefined,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "h2",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "",
                          "style": Object {
                            "letterSpacing": undefined,
                            "paddingLeft": undefined,
                          },
                        },
                        "ref": null,
                        "rendered": "",
                        "type": "h3",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <withRouter()
                              item={
                                                            Object {
                                                                                          "id": 0,
                                                                                        }
                              }
                              private={undefined}
/>,
                            <Unknown
                              isAdmin={undefined}
                              item={
                                                            Object {
                                                                                          "id": 0,
                                                                                        }
                              }
                              private={undefined}
                              readReceipts={undefined}
/>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "item": Object {
                                "id": 0,
                              },
                              "private": undefined,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "isAdmin": undefined,
                              "item": Object {
                                "id": 0,
                              },
                              "private": undefined,
                              "readReceipts": undefined,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "section",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "index": 0,
                  "style": Object {
                    "backgroundImage": undefined,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "li",
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "author": undefined,
        "children": <styled.ul
          author={undefined}
          status={undefined}
>
          <li>
                    <Unknown
                              onClick={[Function]}
                              onMouseOver={undefined}
                              to={undefined}
                    >
                              <section>
                                        <figure
                                                  style={null}
                                        >
                                                  <div
                                                            aria-label="undefined poster image"
                                                            style={
                                                                      Object {
                                                                                "backgroundImage": undefined,
                                                                              }
                                                            }
                                                  />
                                        </figure>
                                        <div>
                                                  <h2
                                                            style={
                                                                      Object {
                                                                                "letterSpacing": undefined,
                                                                                "opacity": undefined,
                                                                              }
                                                            }
                                                  />
                                                  <h3
                                                            style={
                                                                      Object {
                                                                                "letterSpacing": undefined,
                                                                                "paddingLeft": undefined,
                                                                              }
                                                            }
                                                  />
                                                  <div>
                                                            <withRouter()
                                                                      item={
                                                                                Object {
                                                                                          "id": 0,
                                                                                        }
                                                                      }
                                                                      private={undefined}
                                                            />
                                                            <Unknown
                                                                      isAdmin={undefined}
                                                                      item={
                                                                                Object {
                                                                                          "id": 0,
                                                                                        }
                                                                      }
                                                                      private={undefined}
                                                                      readReceipts={undefined}
                                                            />
                                                  </div>
                                        </div>
                              </section>
                              <styled.div
                                        index={0}
                                        style={
                                                  Object {
                                                            "backgroundImage": undefined,
                                                          }
                                        }
                              />
                    </Unknown>
          </li>
</styled.ul>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "author": undefined,
          "children": Array [
            <li>
              <Unknown
                            onClick={[Function]}
                            onMouseOver={undefined}
                            to={undefined}
              >
                            <section>
                                          <figure
                                                        style={null}
                                          >
                                                        <div
                                                                      aria-label="undefined poster image"
                                                                      style={
                                                                                    Object {
                                                                                                  "backgroundImage": undefined,
                                                                                                }
                                                                      }
                                                        />
                                          </figure>
                                          <div>
                                                        <h2
                                                                      style={
                                                                                    Object {
                                                                                                  "letterSpacing": undefined,
                                                                                                  "opacity": undefined,
                                                                                                }
                                                                      }
                                                        />
                                                        <h3
                                                                      style={
                                                                                    Object {
                                                                                                  "letterSpacing": undefined,
                                                                                                  "paddingLeft": undefined,
                                                                                                }
                                                                      }
                                                        />
                                                        <div>
                                                                      <withRouter()
                                                                                    item={
                                                                                                  Object {
                                                                                                                "id": 0,
                                                                                                              }
                                                                                    }
                                                                                    private={undefined}
                                                                      />
                                                                      <Unknown
                                                                                    isAdmin={undefined}
                                                                                    item={
                                                                                                  Object {
                                                                                                                "id": 0,
                                                                                                              }
                                                                                    }
                                                                                    private={undefined}
                                                                                    readReceipts={undefined}
                                                                      />
                                                        </div>
                                          </div>
                            </section>
                            <styled.div
                                          index={0}
                                          style={
                                                        Object {
                                                                      "backgroundImage": undefined,
                                                                    }
                                          }
                            />
              </Unknown>
</li>,
          ],
          "status": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "host",
            "props": Object {
              "children": <Unknown
                onClick={[Function]}
                onMouseOver={undefined}
                to={undefined}
>
                <section>
                                <figure
                                                style={null}
                                >
                                                <div
                                                                aria-label="undefined poster image"
                                                                style={
                                                                                Object {
                                                                                                "backgroundImage": undefined,
                                                                                              }
                                                                }
                                                />
                                </figure>
                                <div>
                                                <h2
                                                                style={
                                                                                Object {
                                                                                                "letterSpacing": undefined,
                                                                                                "opacity": undefined,
                                                                                              }
                                                                }
                                                />
                                                <h3
                                                                style={
                                                                                Object {
                                                                                                "letterSpacing": undefined,
                                                                                                "paddingLeft": undefined,
                                                                                              }
                                                                }
                                                />
                                                <div>
                                                                <withRouter()
                                                                                item={
                                                                                                Object {
                                                                                                                "id": 0,
                                                                                                              }
                                                                                }
                                                                                private={undefined}
                                                                />
                                                                <Unknown
                                                                                isAdmin={undefined}
                                                                                item={
                                                                                                Object {
                                                                                                                "id": 0,
                                                                                                              }
                                                                                }
                                                                                private={undefined}
                                                                                readReceipts={undefined}
                                                                />
                                                </div>
                                </div>
                </section>
                <styled.div
                                index={0}
                                style={
                                                Object {
                                                                "backgroundImage": undefined,
                                                              }
                                }
                />
</Unknown>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <section>
                    <figure
                                        style={null}
                    >
                                        <div
                                                            aria-label="undefined poster image"
                                                            style={
                                                                                Object {
                                                                                                    "backgroundImage": undefined,
                                                                                                  }
                                                            }
                                        />
                    </figure>
                    <div>
                                        <h2
                                                            style={
                                                                                Object {
                                                                                                    "letterSpacing": undefined,
                                                                                                    "opacity": undefined,
                                                                                                  }
                                                            }
                                        />
                                        <h3
                                                            style={
                                                                                Object {
                                                                                                    "letterSpacing": undefined,
                                                                                                    "paddingLeft": undefined,
                                                                                                  }
                                                            }
                                        />
                                        <div>
                                                            <withRouter()
                                                                                item={
                                                                                                    Object {
                                                                                                                        "id": 0,
                                                                                                                      }
                                                                                }
                                                                                private={undefined}
                                                            />
                                                            <Unknown
                                                                                isAdmin={undefined}
                                                                                item={
                                                                                                    Object {
                                                                                                                        "id": 0,
                                                                                                                      }
                                                                                }
                                                                                private={undefined}
                                                                                readReceipts={undefined}
                                                            />
                                        </div>
                    </div>
</section>,
                  <styled.div
                    index={0}
                    style={
                                        Object {
                                                            "backgroundImage": undefined,
                                                          }
                    }
/>,
                ],
                "onClick": [Function],
                "onMouseOver": undefined,
                "to": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <figure
                        style={null}
>
                        <div
                                                aria-label="undefined poster image"
                                                style={
                                                                        Object {
                                                                                                "backgroundImage": undefined,
                                                                                              }
                                                }
                        />
</figure>,
                      <div>
                        <h2
                                                style={
                                                                        Object {
                                                                                                "letterSpacing": undefined,
                                                                                                "opacity": undefined,
                                                                                              }
                                                }
                        />
                        <h3
                                                style={
                                                                        Object {
                                                                                                "letterSpacing": undefined,
                                                                                                "paddingLeft": undefined,
                                                                                              }
                                                }
                        />
                        <div>
                                                <withRouter()
                                                                        item={
                                                                                                Object {
                                                                                                                        "id": 0,
                                                                                                                      }
                                                                        }
                                                                        private={undefined}
                                                />
                                                <Unknown
                                                                        isAdmin={undefined}
                                                                        item={
                                                                                                Object {
                                                                                                                        "id": 0,
                                                                                                                      }
                                                                        }
                                                                        private={undefined}
                                                                        readReceipts={undefined}
                                                />
                        </div>
</div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <div
                          aria-label="undefined poster image"
                          style={
                                                    Object {
                                                                              "backgroundImage": undefined,
                                                                            }
                          }
/>,
                        "style": null,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "aria-label": "undefined poster image",
                          "style": Object {
                            "backgroundImage": undefined,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "div",
                      },
                      "type": "figure",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <h2
                            style={
                                                        Object {
                                                                                    "letterSpacing": undefined,
                                                                                    "opacity": undefined,
                                                                                  }
                            }
/>,
                          <h3
                            style={
                                                        Object {
                                                                                    "letterSpacing": undefined,
                                                                                    "paddingLeft": undefined,
                                                                                  }
                            }
/>,
                          <div>
                            <withRouter()
                                                        item={
                                                                                    Object {
                                                                                                                "id": 0,
                                                                                                              }
                                                        }
                                                        private={undefined}
                            />
                            <Unknown
                                                        isAdmin={undefined}
                                                        item={
                                                                                    Object {
                                                                                                                "id": 0,
                                                                                                              }
                                                        }
                                                        private={undefined}
                                                        readReceipts={undefined}
                            />
</div>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                            "style": Object {
                              "letterSpacing": undefined,
                              "opacity": undefined,
                            },
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "h2",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "",
                            "style": Object {
                              "letterSpacing": undefined,
                              "paddingLeft": undefined,
                            },
                          },
                          "ref": null,
                          "rendered": "",
                          "type": "h3",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <withRouter()
                                item={
                                                                Object {
                                                                                                "id": 0,
                                                                                              }
                                }
                                private={undefined}
/>,
                              <Unknown
                                isAdmin={undefined}
                                item={
                                                                Object {
                                                                                                "id": 0,
                                                                                              }
                                }
                                private={undefined}
                                readReceipts={undefined}
/>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "item": Object {
                                  "id": 0,
                                },
                                "private": undefined,
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "isAdmin": undefined,
                                "item": Object {
                                  "id": 0,
                                },
                                "private": undefined,
                                "readReceipts": undefined,
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                          ],
                          "type": "div",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "section",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "index": 0,
                    "style": Object {
                      "backgroundImage": undefined,
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "li",
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Render ListBrandName, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ThemeProvider
    theme={
        Object {
            "color": Object {
              "background": [Function],
              "brand": [Function],
              "foreground": [Function],
              "highlight": [Function],
            },
            "effects": Object {
              "borderRadius": Object {
                "med": 0.5,
                "small": [Function],
              },
            },
            "elements": Object {
              "thickBorder": [Function],
            },
            "layer": Object {
              "card": 30,
              "nav": 20,
              "overlay": 40,
              "tuck": -1,
              "up": 10,
            },
            "opacity": Object {
              "half": 0.5,
              "least": 0.125,
              "most": 0.85,
            },
            "size": Object {
              "block": Object {
                "border": 8,
                "column": Object {
                  "l": 820,
                  "m": 750,
                },
                "padding": 1.5,
                "spacing": 1,
              },
              "breakpoint": Object {
                "exact": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "max": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "min": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "stops": Object {
                  "max": 1600,
                  "min": 320,
                },
              },
              "font": Object {
                "auto": Array [
                  "
                ",
                  "
        		@media (min-width: ",
                  "32.5625",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "32.5",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "20",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (min-width: ",
                  "100.0625",
                  "em) {
        			",
                  "font-size:	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  ";
              ",
                ],
                "l": 23,
                "m": 20,
                "make": Object {
                  "larger": 3,
                  "normal": 1,
                  "smaller": 0.85,
                  "tiny": 0.65,
                },
                "s": 18,
                "xs": 17,
              },
            },
            "typography": Object {
              "text": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Lora', Georgia, serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                ",
                ],
                "font": "'Lora', Georgia, serif",
                "lineHeight": 1.75,
              },
              "title": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Exo 2', Arial, sans-serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                  font-weight: ",
                  "600",
                  ";
                  margin: 0;
                ",
                ],
                "font": "'Exo 2', Arial, sans-serif",
                "lineHeight": 1.15,
              },
            },
          }
    }
>
    <styled.strong />
</ThemeProvider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Render ListDescription, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    list={
        Object {
            "filter": Object {
              "tags": Array [],
            },
          }
    }
    location={
        Object {
            "pathname": [Function],
          }
    }
    renderedListMeta={
        Object {
            "title": "",
          }
    }
    user={
        Object {
            "connection": Object {
              "status": "online",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.strong
          homepage={false}
          style={
                    Object {
                              "width": "",
                            }
          }
>
          <styled.span>
                    Analog.Cafe
          </styled.span>
          <styled.span>
                    Analog.Cafe
          </styled.span>
</styled.strong>,
        <styled.div>
          <span>
                    <em />
          </span>
          .
</styled.div>,
      ],
      "list": Object {
        "filter": Object {
          "tags": Array [],
        },
      },
      "location": Object {
        "pathname": [Function],
      },
      "renderedListMeta": Object {
        "title": "",
      },
      "user": Object {
        "connection": Object {
          "status": "online",
        },
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.span>
              Analog.Cafe
</styled.span>,
            <styled.span>
              Analog.Cafe
</styled.span>,
          ],
          "homepage": false,
          "style": Object {
            "width": "",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Analog.Cafe",
            },
            "ref": null,
            "rendered": "Analog.Cafe",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Analog.Cafe",
            },
            "ref": null,
            "rendered": "Analog.Cafe",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <span>
              <em />
</span>,
            ".",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <em />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
              },
              "ref": null,
              "rendered": "",
              "type": "em",
            },
            "type": "span",
          },
          ".",
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.strong
            homepage={false}
            style={
                        Object {
                                    "width": "",
                                  }
            }
>
            <styled.span>
                        Analog.Cafe
            </styled.span>
            <styled.span>
                        Analog.Cafe
            </styled.span>
</styled.strong>,
          <styled.div>
            <span>
                        <em />
            </span>
            .
</styled.div>,
        ],
        "list": Object {
          "filter": Object {
            "tags": Array [],
          },
        },
        "location": Object {
          "pathname": [Function],
        },
        "renderedListMeta": Object {
          "title": "",
        },
        "user": Object {
          "connection": Object {
            "status": "online",
          },
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.span>
                Analog.Cafe
</styled.span>,
              <styled.span>
                Analog.Cafe
</styled.span>,
            ],
            "homepage": false,
            "style": Object {
              "width": "",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Analog.Cafe",
              },
              "ref": null,
              "rendered": "Analog.Cafe",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Analog.Cafe",
              },
              "ref": null,
              "rendered": "Analog.Cafe",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <span>
                <em />
</span>,
              ".",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <em />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "",
                },
                "ref": null,
                "rendered": "",
                "type": "em",
              },
              "type": "span",
            },
            ".",
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Render ListDescriptionWrapper, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ThemeProvider
    theme={
        Object {
            "color": Object {
              "background": [Function],
              "brand": [Function],
              "foreground": [Function],
              "highlight": [Function],
            },
            "effects": Object {
              "borderRadius": Object {
                "med": 0.5,
                "small": [Function],
              },
            },
            "elements": Object {
              "thickBorder": [Function],
            },
            "layer": Object {
              "card": 30,
              "nav": 20,
              "overlay": 40,
              "tuck": -1,
              "up": 10,
            },
            "opacity": Object {
              "half": 0.5,
              "least": 0.125,
              "most": 0.85,
            },
            "size": Object {
              "block": Object {
                "border": 8,
                "column": Object {
                  "l": 820,
                  "m": 750,
                },
                "padding": 1.5,
                "spacing": 1,
              },
              "breakpoint": Object {
                "exact": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "max": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "min": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "stops": Object {
                  "max": 1600,
                  "min": 320,
                },
              },
              "font": Object {
                "auto": Array [
                  "
                ",
                  "
        		@media (min-width: ",
                  "32.5625",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "32.5",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "20",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (min-width: ",
                  "100.0625",
                  "em) {
        			",
                  "font-size:	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  ";
              ",
                ],
                "l": 23,
                "m": 20,
                "make": Object {
                  "larger": 3,
                  "normal": 1,
                  "smaller": 0.85,
                  "tiny": 0.65,
                },
                "s": 18,
                "xs": 17,
              },
            },
            "typography": Object {
              "text": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Lora', Georgia, serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                ",
                ],
                "font": "'Lora', Georgia, serif",
                "lineHeight": 1.75,
              },
              "title": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Exo 2', Arial, sans-serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                  font-weight: ",
                  "600",
                  ";
                  margin: 0;
                ",
                ],
                "font": "'Exo 2', Arial, sans-serif",
                "lineHeight": 1.15,
              },
            },
          }
    }
>
    <styled.div />
</ThemeProvider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Render ListHeader, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ThemeProvider
    theme={
        Object {
            "color": Object {
              "background": [Function],
              "brand": [Function],
              "foreground": [Function],
              "highlight": [Function],
            },
            "effects": Object {
              "borderRadius": Object {
                "med": 0.5,
                "small": [Function],
              },
            },
            "elements": Object {
              "thickBorder": [Function],
            },
            "layer": Object {
              "card": 30,
              "nav": 20,
              "overlay": 40,
              "tuck": -1,
              "up": 10,
            },
            "opacity": Object {
              "half": 0.5,
              "least": 0.125,
              "most": 0.85,
            },
            "size": Object {
              "block": Object {
                "border": 8,
                "column": Object {
                  "l": 820,
                  "m": 750,
                },
                "padding": 1.5,
                "spacing": 1,
              },
              "breakpoint": Object {
                "exact": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "max": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "min": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "stops": Object {
                  "max": 1600,
                  "min": 320,
                },
              },
              "font": Object {
                "auto": Array [
                  "
                ",
                  "
        		@media (min-width: ",
                  "32.5625",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "32.5",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "20",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (min-width: ",
                  "100.0625",
                  "em) {
        			",
                  "font-size:	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  ";
              ",
                ],
                "l": 23,
                "m": 20,
                "make": Object {
                  "larger": 3,
                  "normal": 1,
                  "smaller": 0.85,
                  "tiny": 0.65,
                },
                "s": 18,
                "xs": 17,
              },
            },
            "typography": Object {
              "text": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Lora', Georgia, serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                ",
                ],
                "font": "'Lora', Georgia, serif",
                "lineHeight": 1.75,
              },
              "title": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Exo 2', Arial, sans-serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                  font-weight: ",
                  "600",
                  ";
                  margin: 0;
                ",
                ],
                "font": "'Exo 2', Arial, sans-serif",
                "lineHeight": 1.15,
              },
            },
          }
    }
>
    <styled.div />
</ThemeProvider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Render ListItemAuthorDate, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    item={
        Object {
            "authors": Array [
              Object {
                "name": "",
              },
            ],
            "date": Object {
              "published": "",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        "By  ",
        <Unknown>
          <small
                    style={
                              Object {
                                        "opacity": 0.35,
                                      }
                    }
          >
                    Dec 31, 1969
          </small>
           
</Unknown>,
      ],
    },
    "ref": null,
    "rendered": Array [
      "By  ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <small
              style={
                            Object {
                                          "opacity": 0.35,
                                        }
              }
>
              Dec 31, 1969
</small>,
            " ",
            undefined,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Dec 31, 1969",
              "style": Object {
                "opacity": 0.35,
              },
            },
            "ref": null,
            "rendered": "Dec 31, 1969",
            "type": "small",
          },
          " ",
          undefined,
        ],
        "type": Symbol(react.fragment),
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          "By  ",
          <Unknown>
            <small
                        style={
                                    Object {
                                                "opacity": 0.35,
                                              }
                        }
            >
                        Dec 31, 1969
            </small>
             
</Unknown>,
        ],
      },
      "ref": null,
      "rendered": Array [
        "By  ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <small
                style={
                                Object {
                                                "opacity": 0.35,
                                              }
                }
>
                Dec 31, 1969
</small>,
              " ",
              undefined,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Dec 31, 1969",
                "style": Object {
                  "opacity": 0.35,
                },
              },
              "ref": null,
              "rendered": "Dec 31, 1969",
              "type": "small",
            },
            " ",
            undefined,
          ],
          "type": Symbol(react.fragment),
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Render ListItemStats, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <withRouter()
    item={
        Object {
            "type": "placeholder",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Render ListLoader, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Array [
    <styled.div>
      <styled.strong>
            Analog.Cafe
      </styled.strong>
</styled.div>,
    <styled.article>
      <styled.section
            style={
                  Object {
                        "paddingTop": "100vh",
                      }
            }
      />
</styled.article>,
  ],
  Symbol(enzyme.__nodes__): Array [
    Array [
      <styled.div>
        <styled.strong>
                Analog.Cafe
        </styled.strong>
</styled.div>,
      <styled.article>
        <styled.section
                style={
                        Object {
                                "paddingTop": "100vh",
                              }
                }
        />
</styled.article>,
    ],
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Render ListUL, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ThemeProvider
    theme={
        Object {
            "color": Object {
              "background": [Function],
              "brand": [Function],
              "foreground": [Function],
              "highlight": [Function],
            },
            "effects": Object {
              "borderRadius": Object {
                "med": 0.5,
                "small": [Function],
              },
            },
            "elements": Object {
              "thickBorder": [Function],
            },
            "layer": Object {
              "card": 30,
              "nav": 20,
              "overlay": 40,
              "tuck": -1,
              "up": 10,
            },
            "opacity": Object {
              "half": 0.5,
              "least": 0.125,
              "most": 0.85,
            },
            "size": Object {
              "block": Object {
                "border": 8,
                "column": Object {
                  "l": 820,
                  "m": 750,
                },
                "padding": 1.5,
                "spacing": 1,
              },
              "breakpoint": Object {
                "exact": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "max": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "min": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "stops": Object {
                  "max": 1600,
                  "min": 320,
                },
              },
              "font": Object {
                "auto": Array [
                  "
                ",
                  "
        		@media (min-width: ",
                  "32.5625",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "32.5",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "20",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (min-width: ",
                  "100.0625",
                  "em) {
        			",
                  "font-size:	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  ";
              ",
                ],
                "l": 23,
                "m": 20,
                "make": Object {
                  "larger": 3,
                  "normal": 1,
                  "smaller": 0.85,
                  "tiny": 0.65,
                },
                "s": 18,
                "xs": 17,
              },
            },
            "typography": Object {
              "text": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Lora', Georgia, serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                ",
                ],
                "font": "'Lora', Georgia, serif",
                "lineHeight": 1.75,
              },
              "title": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Exo 2', Arial, sans-serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                  font-weight: ",
                  "600",
                  ";
                  margin: 0;
                ",
                ],
                "font": "'Exo 2', Arial, sans-serif",
                "lineHeight": 1.15,
              },
            },
          }
    }
>
    <styled.ul />
</ThemeProvider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Render Stats, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <styled.span
    theme={
        Object {
            "color": Object {
              "background": [Function],
              "brand": [Function],
              "foreground": [Function],
              "highlight": [Function],
            },
            "effects": Object {
              "borderRadius": Object {
                "med": 0.5,
                "small": [Function],
              },
            },
            "elements": Object {
              "thickBorder": [Function],
            },
            "layer": Object {
              "card": 30,
              "nav": 20,
              "overlay": 40,
              "tuck": -1,
              "up": 10,
            },
            "opacity": Object {
              "half": 0.5,
              "least": 0.125,
              "most": 0.85,
            },
            "size": Object {
              "block": Object {
                "border": 8,
                "column": Object {
                  "l": 820,
                  "m": 750,
                },
                "padding": 1.5,
                "spacing": 1,
              },
              "breakpoint": Object {
                "exact": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "max": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "min": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "stops": Object {
                  "max": 1600,
                  "min": 320,
                },
              },
              "font": Object {
                "auto": Array [
                  "
                ",
                  "
        		@media (min-width: ",
                  "32.5625",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "32.5",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "20",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (min-width: ",
                  "100.0625",
                  "em) {
        			",
                  "font-size:	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  ";
              ",
                ],
                "l": 23,
                "m": 20,
                "make": Object {
                  "larger": 3,
                  "normal": 1,
                  "smaller": 0.85,
                  "tiny": 0.65,
                },
                "s": 18,
                "xs": 17,
              },
            },
            "typography": Object {
              "text": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Lora', Georgia, serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                ",
                ],
                "font": "'Lora', Georgia, serif",
                "lineHeight": 1.75,
              },
              "title": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Exo 2', Arial, sans-serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                  font-weight: ",
                  "600",
                  ";
                  margin: 0;
                ",
                ],
                "font": "'Exo 2', Arial, sans-serif",
                "lineHeight": 1.15,
              },
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "className": "sc-bxivhb lPWmc",
    },
    "ref": null,
    "rendered": null,
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "sc-bxivhb lPWmc",
      },
      "ref": null,
      "rendered": null,
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Render ZigZagPicture, matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ThemeProvider
    theme={
        Object {
            "color": Object {
              "background": [Function],
              "brand": [Function],
              "foreground": [Function],
              "highlight": [Function],
            },
            "effects": Object {
              "borderRadius": Object {
                "med": 0.5,
                "small": [Function],
              },
            },
            "elements": Object {
              "thickBorder": [Function],
            },
            "layer": Object {
              "card": 30,
              "nav": 20,
              "overlay": 40,
              "tuck": -1,
              "up": 10,
            },
            "opacity": Object {
              "half": 0.5,
              "least": 0.125,
              "most": 0.85,
            },
            "size": Object {
              "block": Object {
                "border": 8,
                "column": Object {
                  "l": 820,
                  "m": 750,
                },
                "padding": 1.5,
                "spacing": 1,
              },
              "breakpoint": Object {
                "exact": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "max": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "min": Object {
                  "l": [Function],
                  "m": [Function],
                  "s": [Function],
                  "xl": [Function],
                  "xs": [Function],
                  "xxl": [Function],
                },
                "stops": Object {
                  "max": 1600,
                  "min": 320,
                },
              },
              "font": Object {
                "auto": Array [
                  "
                ",
                  "
        		@media (min-width: ",
                  "32.5625",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "32.5",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (max-width: ",
                  "20",
                  "em) {
        			",
                  "font-size: 	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  " ",
                  "
        		@media (min-width: ",
                  "100.0625",
                  "em) {
        			",
                  "font-size:	",
                  [Function],
                  "px;",
                  "
        		}
        	",
                  ";
              ",
                ],
                "l": 23,
                "m": 20,
                "make": Object {
                  "larger": 3,
                  "normal": 1,
                  "smaller": 0.85,
                  "tiny": 0.65,
                },
                "s": 18,
                "xs": 17,
              },
            },
            "typography": Object {
              "text": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Lora', Georgia, serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                ",
                ],
                "font": "'Lora', Georgia, serif",
                "lineHeight": 1.75,
              },
              "title": Object {
                "auto": Array [
                  "
                  color: ",
                  [Function],
                  ";
                  font-family: ",
                  "'Exo 2', Arial, sans-serif",
                  ";
                  letter-spacing: 0.025em;
                  line-height: ",
                  [Function],
                  "em;
                  font-weight: ",
                  "600",
                  ";
                  margin: 0;
                ",
                ],
                "font": "'Exo 2', Arial, sans-serif",
                "lineHeight": 1.15,
              },
            },
          }
    }
>
    <styled.div />
</ThemeProvider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
